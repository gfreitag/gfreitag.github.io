{"version":3,"file":"component---src-pages-using-typescript-tsx-ab7b21634df71dbab384.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,6ECtBX,MAfa,IAAc,IAAb,MAACC,GAAM,EAEjB,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAAS,GAKzC,OACI,uBAAKC,UCXU,iCDYX,uBAAKA,UCPG,6BDOgBC,QANhC,WACIH,GAAaD,EACjB,IAKQ,uBAAKG,UAAcE,iCAAYL,ECdvB,6BDc2C,MACjD,EEGd,MAZe,IAA6B,IAA5B,UAAEM,EAAS,SAAEC,GAAS,EACpC,OACE,uBAAKJ,UCRc,mCDSjB,gBAAC,EAAI,MACL,4BACE,sBAAIA,UCVS,iCDUYG,GACxBC,GAEC,C,+CE6BV,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEpB,EAAK,SAAEmB,GAAU,EAC3C,MAAM,KAAEb,IAASe,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBF,GAAed,EAAKiB,aAAaH,YACnDI,EAAgC,QAApB,EAAGlB,EAAKiB,oBAAY,aAAjB,EAAmBvB,MAExC,OACE,gCACE,6BAAQwB,EAAkBxB,EAAK,MAAMwB,EAAiBxB,GACtD,wBAAMyB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAS1B,IACnC,wBAAM2B,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAApB,EAAKiB,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAAS1B,IACpC,wBAAMyB,KAAK,sBAAsBC,QAASJ,IACzCH,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/menu.js","webpack://gatsby-starter-default/./src/components/menu.module.css","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/layout.module.css","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { container, dropdown, dropdownWrapper, toggle, active } from './menu.module.css'\nimport { useState } from 'react';\n\nconst Menu = ({pages}) => {\n\n    const [isActive, setIsActive] = useState(false);\n    function handleToggle(){\n        setIsActive(!isActive);\n    }\n\n    return(\n        <div className={container}>\n            <div className={toggle} onClick={handleToggle}></div>\n            <div className={`${dropdown} ${isActive ? active : \"\"}`}></div>\n        </div>\n    )\n}\n\nexport default Menu","// extracted by mini-css-extract-plugin\nexport var active = \"menu-module--active--7bf76\";\nexport var container = \"menu-module--container--07ab7\";\nexport var dropdown = \"menu-module--dropdown--6e865\";\nexport var navLinkItem = \"menu-module--nav-link-item--7cfd7\";\nexport var navLinkText = \"menu-module--nav-link-text--9a40e\";\nexport var navLinks = \"menu-module--nav-links--23197\";\nexport var toggle = \"menu-module--toggle--59c2c\";","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { useRef } from 'react';\nimport { container, heading} from './layout.module.css'\nimport h1 from './layout.module.css'\nimport Menu from \"../components/menu\"\n\nconst Layout = ({ pageTitle, children}) => {\n  return (\n    <div className={container}>\n      <Menu/>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var heading = \"layout-module--heading--f158c\";","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","pages","isActive","setIsActive","useState","className","onClick","dropdown","pageTitle","children","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}